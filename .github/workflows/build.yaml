name: Build & Push Docker image

on:
  push:
    branches:
      - main
      - dev

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - id: setup-buildx
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - id: login
        name: Log in to registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with: 
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        name: Extract metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.base.name=rocker/r-ver:4.3.2
            org.opencontainers.image.documentation=TBD
          annotations: |
            org.opencontainers.image.base.name=rocker/r-ver:4.3.2
            org.opencontainers.image.documentation=TBD

      - id: build
        name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          sbom: true
          provenance: true
